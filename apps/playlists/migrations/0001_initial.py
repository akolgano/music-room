# Generated by Django 5.1 on 2025-07-26 07:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tracks', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('public', models.BooleanField(default=True)),
                ('license_type', models.CharField(choices=[('open', 'Open to everyone'), ('invite_only', 'Invite only'), ('location_time', 'Time and location restricted')], default='open', max_length=20)),
                ('vote_start_time', models.TimeField(blank=True, null=True)),
                ('vote_end_time', models.TimeField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('allowed_radius_meters', models.IntegerField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to=settings.AUTH_USER_MODEL)),
                ('invited_users', models.ManyToManyField(blank=True, related_name='invited_to_playlists', to=settings.AUTH_USER_MODEL)),
                ('users_already_voted', models.ManyToManyField(blank=True, related_name='already_voted', to=settings.AUTH_USER_MODEL)),
                ('users_saved', models.ManyToManyField(blank=True, related_name='saved_playlists', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlaylistTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField()),
                ('points', models.IntegerField(blank=True, default=0, null=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='playlists.playlist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracks.track')),
            ],
            options={
                'ordering': ['position'],
                'unique_together': {('playlist', 'position')},
            },
        ),
    ]
