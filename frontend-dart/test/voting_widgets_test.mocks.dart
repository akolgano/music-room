// Mocks generated by Mockito 5.4.6 from annotations
// in music_room/test/voting_widgets_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i7;

import 'package:google_sign_in/google_sign_in.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:music_room/models/models.dart' as _i4;
import 'package:music_room/providers/auth_provider.dart' as _i8;
import 'package:music_room/providers/voting_provider.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGoogleSignIn_0 extends _i1.SmartFake implements _i2.GoogleSignIn {
  _FakeGoogleSignIn_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [VotingProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockVotingProvider extends _i1.Mock implements _i3.VotingProvider {
  MockVotingProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, _i4.VoteStats> get trackVotes =>
      (super.noSuchMethod(
            Invocation.getter(#trackVotes),
            returnValue: <String, _i4.VoteStats>{},
          )
          as Map<String, _i4.VoteStats>);

  @override
  bool get canVote =>
      (super.noSuchMethod(Invocation.getter(#canVote), returnValue: false)
          as bool);

  @override
  Map<int, int> get trackPoints =>
      (super.noSuchMethod(
            Invocation.getter(#trackPoints),
            returnValue: <int, int>{},
          )
          as Map<int, int>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasError =>
      (super.noSuchMethod(Invocation.getter(#hasError), returnValue: false)
          as bool);

  @override
  bool get hasSuccess =>
      (super.noSuchMethod(Invocation.getter(#hasSuccess), returnValue: false)
          as bool);

  @override
  bool get isReady =>
      (super.noSuchMethod(Invocation.getter(#isReady), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i4.VoteStats? getTrackVotes(String? trackId) =>
      (super.noSuchMethod(Invocation.method(#getTrackVotes, [trackId]))
          as _i4.VoteStats?);

  @override
  _i4.VoteStats? getTrackVotesByIndex(int? index) =>
      (super.noSuchMethod(Invocation.method(#getTrackVotesByIndex, [index]))
          as _i4.VoteStats?);

  @override
  bool hasUserVoted(String? trackId) =>
      (super.noSuchMethod(
            Invocation.method(#hasUserVoted, [trackId]),
            returnValue: false,
          )
          as bool);

  @override
  bool hasUserVotedByIndex(int? index) =>
      (super.noSuchMethod(
            Invocation.method(#hasUserVotedByIndex, [index]),
            returnValue: false,
          )
          as bool);

  @override
  int? getUserVote(String? trackId) =>
      (super.noSuchMethod(Invocation.method(#getUserVote, [trackId])) as int?);

  @override
  int? getUserVoteByIndex(int? index) =>
      (super.noSuchMethod(Invocation.method(#getUserVoteByIndex, [index]))
          as int?);

  @override
  int getTrackPoints(int? index) =>
      (super.noSuchMethod(
            Invocation.method(#getTrackPoints, [index]),
            returnValue: 0,
          )
          as int);

  @override
  void updateTrackPoints(int? index, int? points) => super.noSuchMethod(
    Invocation.method(#updateTrackPoints, [index, points]),
    returnValueForMissingStub: null,
  );

  @override
  void initializeTrackPoints(List<_i4.PlaylistTrack>? tracks) =>
      super.noSuchMethod(
        Invocation.method(#initializeTrackPoints, [tracks]),
        returnValueForMissingStub: null,
      );

  @override
  void setVotingPermission(bool? canVote) => super.noSuchMethod(
    Invocation.method(#setVotingPermission, [canVote]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<bool> voteForTrackByIndex({
    required String? playlistId,
    required int? trackIndex,
    required String? token,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#voteForTrackByIndex, [], {
              #playlistId: playlistId,
              #trackIndex: trackIndex,
              #token: token,
            }),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> upvoteTrackByIndex(
    String? playlistId,
    int? trackIndex,
    String? token,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#upvoteTrackByIndex, [
              playlistId,
              trackIndex,
              token,
            ]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> upvoteTrack(
    String? playlistId,
    String? trackId,
    String? token,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#upvoteTrack, [playlistId, trackId, token]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void clearVotingData() => super.noSuchMethod(
    Invocation.method(#clearVotingData, []),
    returnValueForMissingStub: null,
  );

  @override
  String getVotingStatusMessage() =>
      (super.noSuchMethod(
            Invocation.method(#getVotingStatusMessage, []),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.method(#getVotingStatusMessage, []),
            ),
          )
          as String);

  @override
  void setUserVote(int? trackIndex, int? voteValue) => super.noSuchMethod(
    Invocation.method(#setUserVote, [trackIndex, voteValue]),
    returnValueForMissingStub: null,
  );

  @override
  int getTotalPoints() =>
      (super.noSuchMethod(
            Invocation.method(#getTotalPoints, []),
            returnValue: 0,
          )
          as int);

  @override
  List<int> getVotedTrackIndices() =>
      (super.noSuchMethod(
            Invocation.method(#getVotedTrackIndices, []),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  void refreshVotingData(List<_i4.PlaylistTrack>? tracks) => super.noSuchMethod(
    Invocation.method(#refreshVotingData, [tracks]),
    returnValueForMissingStub: null,
  );

  @override
  void clearMessages() => super.noSuchMethod(
    Invocation.method(#clearMessages, []),
    returnValueForMissingStub: null,
  );

  @override
  void setLoading(bool? loading) => super.noSuchMethod(
    Invocation.method(#setLoading, [loading]),
    returnValueForMissingStub: null,
  );

  @override
  void setError(String? error) => super.noSuchMethod(
    Invocation.method(#setError, [error]),
    returnValueForMissingStub: null,
  );

  @override
  void setSuccess(String? message) => super.noSuchMethod(
    Invocation.method(#setSuccess, [message]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<T?> executeAsync<T>(
    _i5.Future<T> Function()? operation, {
    String? successMessage,
    String? errorMessage,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #executeAsync,
              [operation],
              {#successMessage: successMessage, #errorMessage: errorMessage},
            ),
            returnValue: _i5.Future<T?>.value(),
          )
          as _i5.Future<T?>);

  @override
  _i5.Future<bool> executeBool(
    _i5.Future<void> Function()? operation, {
    String? successMessage,
    String? errorMessage,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #executeBool,
              [operation],
              {#successMessage: successMessage, #errorMessage: errorMessage},
            ),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i8.AuthProvider {
  MockAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GoogleSignIn get googleSignIn =>
      (super.noSuchMethod(
            Invocation.getter(#googleSignIn),
            returnValue: _FakeGoogleSignIn_0(
              this,
              Invocation.getter(#googleSignIn),
            ),
          )
          as _i2.GoogleSignIn);

  @override
  bool get isLoggedIn =>
      (super.noSuchMethod(Invocation.getter(#isLoggedIn), returnValue: false)
          as bool);

  @override
  String get displayName =>
      (super.noSuchMethod(
            Invocation.getter(#displayName),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#displayName),
            ),
          )
          as String);

  @override
  bool get hasValidToken =>
      (super.noSuchMethod(Invocation.getter(#hasValidToken), returnValue: false)
          as bool);

  @override
  Map<String, String> get authHeaders =>
      (super.noSuchMethod(
            Invocation.getter(#authHeaders),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasError =>
      (super.noSuchMethod(Invocation.getter(#hasError), returnValue: false)
          as bool);

  @override
  bool get hasSuccess =>
      (super.noSuchMethod(Invocation.getter(#hasSuccess), returnValue: false)
          as bool);

  @override
  bool get isReady =>
      (super.noSuchMethod(Invocation.getter(#isReady), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<bool> login(String? username, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#login, [username, password]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> forgotPassword(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#forgotPassword, [email]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> forgotChangePassword(
    String? email,
    String? otp,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#forgotChangePassword, [email, otp, password]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> sendSignupEmailOtp(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendSignupEmailOtp, [email]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> signupWithOtp(
    String? username,
    String? email,
    String? password,
    String? otp,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signupWithOtp, [username, email, password, otp]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> googleLogin() =>
      (super.noSuchMethod(
            Invocation.method(#googleLogin, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> facebookLogin() =>
      (super.noSuchMethod(
            Invocation.method(#facebookLogin, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void clearMessages() => super.noSuchMethod(
    Invocation.method(#clearMessages, []),
    returnValueForMissingStub: null,
  );

  @override
  void setLoading(bool? loading) => super.noSuchMethod(
    Invocation.method(#setLoading, [loading]),
    returnValueForMissingStub: null,
  );

  @override
  void setError(String? error) => super.noSuchMethod(
    Invocation.method(#setError, [error]),
    returnValueForMissingStub: null,
  );

  @override
  void setSuccess(String? message) => super.noSuchMethod(
    Invocation.method(#setSuccess, [message]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<T?> executeAsync<T>(
    _i5.Future<T> Function()? operation, {
    String? successMessage,
    String? errorMessage,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #executeAsync,
              [operation],
              {#successMessage: successMessage, #errorMessage: errorMessage},
            ),
            returnValue: _i5.Future<T?>.value(),
          )
          as _i5.Future<T?>);

  @override
  _i5.Future<bool> executeBool(
    _i5.Future<void> Function()? operation, {
    String? successMessage,
    String? errorMessage,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #executeBool,
              [operation],
              {#successMessage: successMessage, #errorMessage: errorMessage},
            ),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
