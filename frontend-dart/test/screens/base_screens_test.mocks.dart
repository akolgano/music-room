// Mocks generated by Mockito 5.4.6 from annotations
// in music_room/test/screens/base_screens_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:google_sign_in/google_sign_in.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:music_room/models/api_models.dart' as _i4;
import 'package:music_room/models/music_models.dart' as _i9;
import 'package:music_room/models/sort_models.dart' as _i3;
import 'package:music_room/providers/auth_providers.dart' as _i5;
import 'package:music_room/providers/music_providers.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGoogleSignIn_0 extends _i1.SmartFake implements _i2.GoogleSignIn {
  _FakeGoogleSignIn_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTrackSortOption_1 extends _i1.SmartFake
    implements _i3.TrackSortOption {
  _FakeTrackSortOption_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAddTrackResult_2 extends _i1.SmartFake
    implements _i4.AddTrackResult {
  _FakeAddTrackResult_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBatchAddResult_3 extends _i1.SmartFake
    implements _i4.BatchAddResult {
  _FakeBatchAddResult_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i5.AuthProvider {
  MockAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoggedIn =>
      (super.noSuchMethod(Invocation.getter(#isLoggedIn), returnValue: false)
          as bool);

  @override
  bool get hasValidToken =>
      (super.noSuchMethod(Invocation.getter(#hasValidToken), returnValue: false)
          as bool);

  @override
  _i2.GoogleSignIn get googleSignIn =>
      (super.noSuchMethod(
            Invocation.getter(#googleSignIn),
            returnValue: _FakeGoogleSignIn_0(
              this,
              Invocation.getter(#googleSignIn),
            ),
          )
          as _i2.GoogleSignIn);

  @override
  Map<String, String> get authHeaders =>
      (super.noSuchMethod(
            Invocation.getter(#authHeaders),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasError =>
      (super.noSuchMethod(Invocation.getter(#hasError), returnValue: false)
          as bool);

  @override
  bool get hasSuccess =>
      (super.noSuchMethod(Invocation.getter(#hasSuccess), returnValue: false)
          as bool);

  @override
  bool get isReady =>
      (super.noSuchMethod(Invocation.getter(#isReady), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i6.Future<bool> login(String? username, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#login, [username, password]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> resetPasswordWithOtp(
    String? email,
    String? otp,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#resetPasswordWithOtp, [email, otp, newPassword]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> sendPasswordResetEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [email]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> sendSignupEmailOtp(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendSignupEmailOtp, [email]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> signupWithOtp(
    String? username,
    String? email,
    String? password,
    String? otp,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signupWithOtp, [username, email, password, otp]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> googleLogin() =>
      (super.noSuchMethod(
            Invocation.method(#googleLogin, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> handleWebGoogleSignIn(_i2.GoogleSignInAccount? user) =>
      (super.noSuchMethod(
            Invocation.method(#handleWebGoogleSignIn, [user]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> facebookLogin() =>
      (super.noSuchMethod(
            Invocation.method(#facebookLogin, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<bool> checkEmailAvailability(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#checkEmailAvailability, [email]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  void clearMessages() => super.noSuchMethod(
    Invocation.method(#clearMessages, []),
    returnValueForMissingStub: null,
  );

  @override
  void setLoading(bool? loading) => super.noSuchMethod(
    Invocation.method(#setLoading, [loading]),
    returnValueForMissingStub: null,
  );

  @override
  void setError(String? error) => super.noSuchMethod(
    Invocation.method(#setError, [error]),
    returnValueForMissingStub: null,
  );

  @override
  void setSuccess(String? message) => super.noSuchMethod(
    Invocation.method(#setSuccess, [message]),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<T?> executeAsync<T>(
    _i6.Future<T> Function()? operation, {
    String? successMessage,
    String? errorMessage,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #executeAsync,
              [operation],
              {#successMessage: successMessage, #errorMessage: errorMessage},
            ),
            returnValue: _i6.Future<T?>.value(),
          )
          as _i6.Future<T?>);

  @override
  _i6.Future<bool> executeBool(
    _i6.Future<void> Function()? operation, {
    String? successMessage,
    String? errorMessage,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #executeBool,
              [operation],
              {#successMessage: successMessage, #errorMessage: errorMessage},
            ),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [MusicProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockMusicProvider extends _i1.Mock implements _i8.MusicProvider {
  MockMusicProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i9.Playlist> get playlists =>
      (super.noSuchMethod(
            Invocation.getter(#playlists),
            returnValue: <_i9.Playlist>[],
          )
          as List<_i9.Playlist>);

  @override
  List<_i9.Playlist> get userPlaylists =>
      (super.noSuchMethod(
            Invocation.getter(#userPlaylists),
            returnValue: <_i9.Playlist>[],
          )
          as List<_i9.Playlist>);

  @override
  List<_i9.Playlist> get publicPlaylists =>
      (super.noSuchMethod(
            Invocation.getter(#publicPlaylists),
            returnValue: <_i9.Playlist>[],
          )
          as List<_i9.Playlist>);

  @override
  List<_i9.Track> get searchResults =>
      (super.noSuchMethod(
            Invocation.getter(#searchResults),
            returnValue: <_i9.Track>[],
          )
          as List<_i9.Track>);

  @override
  List<_i9.PlaylistTrack> get playlistTracks =>
      (super.noSuchMethod(
            Invocation.getter(#playlistTracks),
            returnValue: <_i9.PlaylistTrack>[],
          )
          as List<_i9.PlaylistTrack>);

  @override
  bool get hasConnectionError =>
      (super.noSuchMethod(
            Invocation.getter(#hasConnectionError),
            returnValue: false,
          )
          as bool);

  @override
  _i3.TrackSortOption get currentSortOption =>
      (super.noSuchMethod(
            Invocation.getter(#currentSortOption),
            returnValue: _FakeTrackSortOption_1(
              this,
              Invocation.getter(#currentSortOption),
            ),
          )
          as _i3.TrackSortOption);

  @override
  List<_i9.PlaylistTrack> get sortedPlaylistTracks =>
      (super.noSuchMethod(
            Invocation.getter(#sortedPlaylistTracks),
            returnValue: <_i9.PlaylistTrack>[],
          )
          as List<_i9.PlaylistTrack>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasError =>
      (super.noSuchMethod(Invocation.getter(#hasError), returnValue: false)
          as bool);

  @override
  bool get hasSuccess =>
      (super.noSuchMethod(Invocation.getter(#hasSuccess), returnValue: false)
          as bool);

  @override
  bool get isReady =>
      (super.noSuchMethod(Invocation.getter(#isReady), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void clearSearchResults() => super.noSuchMethod(
    Invocation.method(#clearSearchResults, []),
    returnValueForMissingStub: null,
  );

  @override
  void setSortOption(_i3.TrackSortOption? sortOption) => super.noSuchMethod(
    Invocation.method(#setSortOption, [sortOption]),
    returnValueForMissingStub: null,
  );

  @override
  void resetToCustomOrder() => super.noSuchMethod(
    Invocation.method(#resetToCustomOrder, []),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> fetchUserPlaylists(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#fetchUserPlaylists, [token]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> fetchPublicPlaylists(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#fetchPublicPlaylists, [token]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> fetchAllPlaylists(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllPlaylists, [token]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i9.Playlist?> getPlaylistDetails(String? id, String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getPlaylistDetails, [id, token]),
            returnValue: _i6.Future<_i9.Playlist?>.value(),
          )
          as _i6.Future<_i9.Playlist?>);

  @override
  _i6.Future<String?> createPlaylist(
    String? name,
    String? description,
    bool? isPublic,
    String? token,
    String? licenseType,
    bool? isEvent, [
    String? deviceUuid,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#createPlaylist, [
              name,
              description,
              isPublic,
              token,
              licenseType,
              isEvent,
              deviceUuid,
            ]),
            returnValue: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  _i6.Future<void> searchDeezerTracks(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchDeezerTracks, [query]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i9.Track?> getDeezerTrack(String? trackId, String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getDeezerTrack, [trackId, token]),
            returnValue: _i6.Future<_i9.Track?>.value(),
          )
          as _i6.Future<_i9.Track?>);

  @override
  _i9.Track? getTrackById(String? trackId) =>
      (super.noSuchMethod(Invocation.method(#getTrackById, [trackId]))
          as _i9.Track?);

  @override
  _i6.Future<void> fetchPlaylistTracks(String? playlistId, String? token) =>
      (super.noSuchMethod(
            Invocation.method(#fetchPlaylistTracks, [playlistId, token]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void setPlaylistTracks(List<_i9.PlaylistTrack>? tracks) => super.noSuchMethod(
    Invocation.method(#setPlaylistTracks, [tracks]),
    returnValueForMissingStub: null,
  );

  @override
  bool isTrackInPlaylist(String? trackId) =>
      (super.noSuchMethod(
            Invocation.method(#isTrackInPlaylist, [trackId]),
            returnValue: false,
          )
          as bool);

  @override
  _i6.Future<_i4.AddTrackResult> addTrackToPlaylist(
    String? playlistId,
    String? trackId,
    String? token,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addTrackToPlaylist, [
              playlistId,
              trackId,
              token,
            ]),
            returnValue: _i6.Future<_i4.AddTrackResult>.value(
              _FakeAddTrackResult_2(
                this,
                Invocation.method(#addTrackToPlaylist, [
                  playlistId,
                  trackId,
                  token,
                ]),
              ),
            ),
          )
          as _i6.Future<_i4.AddTrackResult>);

  @override
  _i6.Future<_i4.AddTrackResult> addTrackObjectToPlaylist(
    String? playlistId,
    _i9.Track? track,
    String? token,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addTrackObjectToPlaylist, [
              playlistId,
              track,
              token,
            ]),
            returnValue: _i6.Future<_i4.AddTrackResult>.value(
              _FakeAddTrackResult_2(
                this,
                Invocation.method(#addTrackObjectToPlaylist, [
                  playlistId,
                  track,
                  token,
                ]),
              ),
            ),
          )
          as _i6.Future<_i4.AddTrackResult>);

  @override
  _i6.Future<_i4.AddTrackResult> addRandomTrackToPlaylist(
    String? playlistId,
    String? token,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addRandomTrackToPlaylist, [playlistId, token]),
            returnValue: _i6.Future<_i4.AddTrackResult>.value(
              _FakeAddTrackResult_2(
                this,
                Invocation.method(#addRandomTrackToPlaylist, [
                  playlistId,
                  token,
                ]),
              ),
            ),
          )
          as _i6.Future<_i4.AddTrackResult>);

  @override
  _i6.Future<_i4.BatchAddResult> addMultipleTracksToPlaylist({
    required String? playlistId,
    required List<String>? trackIds,
    required String? token,
    String? deviceUuid,
    dynamic Function(int, int)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#addMultipleTracksToPlaylist, [], {
              #playlistId: playlistId,
              #trackIds: trackIds,
              #token: token,
              #deviceUuid: deviceUuid,
              #onProgress: onProgress,
            }),
            returnValue: _i6.Future<_i4.BatchAddResult>.value(
              _FakeBatchAddResult_3(
                this,
                Invocation.method(#addMultipleTracksToPlaylist, [], {
                  #playlistId: playlistId,
                  #trackIds: trackIds,
                  #token: token,
                  #deviceUuid: deviceUuid,
                  #onProgress: onProgress,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.BatchAddResult>);

  @override
  _i6.Future<void> removeTrackFromPlaylist({
    required String? playlistId,
    required String? trackId,
    required String? token,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#removeTrackFromPlaylist, [], {
              #playlistId: playlistId,
              #trackId: trackId,
              #token: token,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> moveTrackInPlaylist({
    required String? playlistId,
    required int? rangeStart,
    required int? insertBefore,
    required String? token,
    int? rangeLength = 1,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#moveTrackInPlaylist, [], {
              #playlistId: playlistId,
              #rangeStart: rangeStart,
              #insertBefore: insertBefore,
              #token: token,
              #rangeLength: rangeLength,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void updateTrackInPlaylist(String? trackId, _i9.Track? trackDetails) =>
      super.noSuchMethod(
        Invocation.method(#updateTrackInPlaylist, [trackId, trackDetails]),
        returnValueForMissingStub: null,
      );

  @override
  void updatePlaylistTracks(List<_i9.PlaylistTrack>? updatedTracks) =>
      super.noSuchMethod(
        Invocation.method(#updatePlaylistTracks, [updatedTracks]),
        returnValueForMissingStub: null,
      );

  @override
  void updatePlaylistTracksWithPreload(
    List<_i9.PlaylistTrack>? updatedTracks,
  ) => super.noSuchMethod(
    Invocation.method(#updatePlaylistTracksWithPreload, [updatedTracks]),
    returnValueForMissingStub: null,
  );

  @override
  void updatePlaylistInCache(
    String? playlistId, {
    String? name,
    String? description,
    bool? isPublic,
    List<_i9.Track>? tracks,
    String? licenseType,
    bool? isEvent,
    List<_i9.User>? sharedWith,
  }) => super.noSuchMethod(
    Invocation.method(
      #updatePlaylistInCache,
      [playlistId],
      {
        #name: name,
        #description: description,
        #isPublic: isPublic,
        #tracks: tracks,
        #licenseType: licenseType,
        #isEvent: isEvent,
        #sharedWith: sharedWith,
      },
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> updatePlaylistDetails(
    String? playlistId,
    String? token, {
    String? name,
    String? description,
    bool? isEvent,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updatePlaylistDetails,
              [playlistId, token],
              {#name: name, #description: description, #isEvent: isEvent},
            ),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> shufflePlaylistTracks(String? playlistId, String? token) =>
      (super.noSuchMethod(
            Invocation.method(#shufflePlaylistTracks, [playlistId, token]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> forceRefreshPlaylists(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#forceRefreshPlaylists, [token]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<bool> deletePlaylist(String? playlistId, String? token) =>
      (super.noSuchMethod(
            Invocation.method(#deletePlaylist, [playlistId, token]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<List<_i9.Playlist>> getSavedEvents(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getSavedEvents, [token]),
            returnValue: _i6.Future<List<_i9.Playlist>>.value(<_i9.Playlist>[]),
          )
          as _i6.Future<List<_i9.Playlist>>);

  @override
  _i6.Future<List<_i9.Playlist>> getPublicEvents(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getPublicEvents, [token]),
            returnValue: _i6.Future<List<_i9.Playlist>>.value(<_i9.Playlist>[]),
          )
          as _i6.Future<List<_i9.Playlist>>);

  @override
  _i6.Future<List<_i9.Track>> getRandomTracksFromAPI({int? count = 10}) =>
      (super.noSuchMethod(
            Invocation.method(#getRandomTracksFromAPI, [], {#count: count}),
            returnValue: _i6.Future<List<_i9.Track>>.value(<_i9.Track>[]),
          )
          as _i6.Future<List<_i9.Track>>);

  @override
  void clearMessages() => super.noSuchMethod(
    Invocation.method(#clearMessages, []),
    returnValueForMissingStub: null,
  );

  @override
  void setLoading(bool? loading) => super.noSuchMethod(
    Invocation.method(#setLoading, [loading]),
    returnValueForMissingStub: null,
  );

  @override
  void setError(String? error) => super.noSuchMethod(
    Invocation.method(#setError, [error]),
    returnValueForMissingStub: null,
  );

  @override
  void setSuccess(String? message) => super.noSuchMethod(
    Invocation.method(#setSuccess, [message]),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<T?> executeAsync<T>(
    _i6.Future<T> Function()? operation, {
    String? successMessage,
    String? errorMessage,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #executeAsync,
              [operation],
              {#successMessage: successMessage, #errorMessage: errorMessage},
            ),
            returnValue: _i6.Future<T?>.value(),
          )
          as _i6.Future<T?>);

  @override
  _i6.Future<bool> executeBool(
    _i6.Future<void> Function()? operation, {
    String? successMessage,
    String? errorMessage,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #executeBool,
              [operation],
              {#successMessage: successMessage, #errorMessage: errorMessage},
            ),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
