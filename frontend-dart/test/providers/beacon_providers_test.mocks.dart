// Mocks generated by Mockito 5.4.6 from annotations
// in music_room/test/providers/beacon_providers_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:music_room/services/beacon_services.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BeaconService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBeaconService extends _i1.Mock implements _i2.BeaconService {
  MockBeaconService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<List<_i2.BeaconInfo>> get beaconsStream =>
      (super.noSuchMethod(
            Invocation.getter(#beaconsStream),
            returnValue: _i3.Stream<List<_i2.BeaconInfo>>.empty(),
          )
          as _i3.Stream<List<_i2.BeaconInfo>>);

  @override
  _i3.Stream<_i2.BeaconInfo> get beaconEnteredStream =>
      (super.noSuchMethod(
            Invocation.getter(#beaconEnteredStream),
            returnValue: _i3.Stream<_i2.BeaconInfo>.empty(),
          )
          as _i3.Stream<_i2.BeaconInfo>);

  @override
  _i3.Stream<_i2.BeaconInfo> get beaconExitedStream =>
      (super.noSuchMethod(
            Invocation.getter(#beaconExitedStream),
            returnValue: _i3.Stream<_i2.BeaconInfo>.empty(),
          )
          as _i3.Stream<_i2.BeaconInfo>);

  @override
  _i3.Stream<bool> get scanningStateStream =>
      (super.noSuchMethod(
            Invocation.getter(#scanningStateStream),
            returnValue: _i3.Stream<bool>.empty(),
          )
          as _i3.Stream<bool>);

  @override
  List<_i2.BeaconInfo> get discoveredBeacons =>
      (super.noSuchMethod(
            Invocation.getter(#discoveredBeacons),
            returnValue: <_i2.BeaconInfo>[],
          )
          as List<_i2.BeaconInfo>);

  @override
  bool get isScanning =>
      (super.noSuchMethod(Invocation.getter(#isScanning), returnValue: false)
          as bool);

  @override
  bool get isMonitoring =>
      (super.noSuchMethod(Invocation.getter(#isMonitoring), returnValue: false)
          as bool);

  @override
  _i3.Future<bool> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> requestPermissions() =>
      (super.noSuchMethod(
            Invocation.method(#requestPermissions, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> startScanning({List<_i2.BeaconRegionConfig>? regions}) =>
      (super.noSuchMethod(
            Invocation.method(#startScanning, [], {#regions: regions}),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> stopScanning() =>
      (super.noSuchMethod(
            Invocation.method(#stopScanning, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> startMonitoring(List<_i2.BeaconRegionConfig>? regions) =>
      (super.noSuchMethod(
            Invocation.method(#startMonitoring, [regions]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> stopMonitoring() =>
      (super.noSuchMethod(
            Invocation.method(#stopMonitoring, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  List<_i2.BeaconInfo> getNearbyBeacons({double? maxDistance = 2.0}) =>
      (super.noSuchMethod(
            Invocation.method(#getNearbyBeacons, [], {
              #maxDistance: maxDistance,
            }),
            returnValue: <_i2.BeaconInfo>[],
          )
          as List<_i2.BeaconInfo>);

  @override
  _i3.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
