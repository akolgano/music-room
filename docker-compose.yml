services:
  postgres:
    image: postgres:13
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
           POSTGRES_HOST: ${POSTGRES_HOST}
           POSTGRES_DB: ${POSTGRES_DB}
           POSTGRES_USER: ${POSTGRES_USER}
           POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - backend
  django:
    container_name: django
    build:
      context: .
      dockerfile: docker/Dockerfile
    volumes:
      - .:/app
      - ./logs:/var/log
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - backend
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PIPELINE: local
      DJANGO_SUPERUSER_USERNAME: ${SUPER_USER}
      DJANGO_SUPERUSER_PASSWORD: ${SUPER_PASSWORD}
      DJANGO_SUPERUSER_EMAIL: ${SUPER_EMAIL}
      FACEBOOK_APP_ID: ${FACEBOOK_APP_ID}
      FACEBOOK_APP_SECRET: ${FACEBOOK_APP_SECRET}
      FACEBOOK_APP_CLIENT_TOKEN: ${FACEBOOK_APP_CLIENT_TOKEN}
      GOOGLE_CLIENT_ID_WEB: ${GOOGLE_CLIENT_ID_WEB}
      GOOGLE_CLIENT_ID_APP: ${GOOGLE_CLIENT_ID_APP}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      DJANGO_SETTINGS_MODULE: core.settings
      REDIS_URL: redis://redis:6379/0
  flutter_web:
    container_name: flutter_web
    build:
      context: ./frontend-dart
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./frontend-dart:/app
    networks:
      - backend
    depends_on:
      - django
  redis:
    container_name: redis
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - backend
volumes:
  postgres_data:
  backup:
         driver: local
         driver_opts:
            type: none
            o: bind
            device: ~/data/backup
networks:
  backend:
    driver: bridge
